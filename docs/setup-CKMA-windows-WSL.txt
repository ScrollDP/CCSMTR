URL:
https://github.com/dorssel/usbipd-win/issues/335
https://github.com/badgumby/arch-wsl?tab=readme-ov-file
https://github.com/dorssel/usbipd-win



winget install 9MZNMNKSM73X
spustite arch wsl
zadaj user a heslo

Môžeš si stiahnut aj Windows Terminal
winget install Microsoft.WindowsTerminal


Pre windows client:
https://sourceforge.net/projects/vcxsrv/
Select display settings - Take default
Select how to start clients - Take default
Extra settings - Be sure Disable access control is checked.
Configuration complete - Click Finish

windows powershell:
New-NetFirewallRule -DisplayName "X Server - WSL 2" -Direction Inbound -Program "C:\Program Files\VcXsrv\vcxsrv.exe" -Action Allow

toto vložiť/nahradiť:
sudo nano /etc/pacman.conf
[options]
HoldPkg = pacman glibc
Architecture = auto
Color
CheckSpace
SigLevel = Required DatabaseOptional
LocalFileSigLevel = Optional

------------
sudo nano /etc/pacman.conf
#
# /etc/pacman.conf
#
# See the pacman.conf(5) manpage for option and repository directives

#
# GENERAL OPTIONS
#
[options]
# The following paths are commented out with their default values listed.
# If you wish to use different paths, uncomment and update the paths.
#RootDir     = /
#DBPath      = /var/lib/pacman/
#CacheDir    = /var/cache/pacman/pkg/
#LogFile     = /var/log/pacman.log
#GPGDir      = /etc/pacman.d/gnupg/
#HookDir     = /etc/pacman.d/hooks/
HoldPkg     = pacman glibc
#XferCommand = /usr/bin/curl -L -C - -f -o %o %u
#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u
#CleanMethod = KeepInstalled
Architecture = auto

# Pacman won't upgrade packages listed in IgnorePkg and members of IgnoreGroup
#IgnorePkg   =
#IgnoreGroup =

#NoUpgrade   =
#NoExtract   =

# Misc options
#UseSyslog
Color
#NoProgressBar
CheckSpace
#VerbosePkgLists
#ParallelDownloads = 5

# By default, pacman accepts packages signed by keys that its local keyring
# trusts (see pacman-key and its man page), as well as unsigned packages.
SigLevel    = Required DatabaseOptional
LocalFileSigLevel = Optional
#RemoteFileSigLevel = Required

# NOTE: You must run `pacman-key --init` before first using pacman; the local
# keyring can then be populated with the keys of all official Arch Linux
# packagers with `pacman-key --populate archlinux`.

#
# REPOSITORIES
#   - can be defined here or included from another file
#   - pacman will search repositories in the order defined here
#   - local/custom mirrors can be added here or in separate files
#   - repositories listed first will take precedence when packages
#     have identical names, regardless of version number
#   - URLs will have $repo replaced by the name of the current repo
#   - URLs will have $arch replaced by the name of the architecture
#
# Repository entries are of the format:
#       [repo-name]
#       Server = ServerName
#       Include = IncludePath
#
# The header [repo-name] is crucial - it must be present and
# uncommented to enable the repo.
#

# The testing repositories are disabled by default. To enable, uncomment the
# repo name header and Include lines. You can add preferred servers immediately
# after the header, and they will be used before the default mirrors.

#[core-testing]
#Include = /etc/pacman.d/mirrorlist

[core]
Include = /etc/pacman.d/mirrorlist

#[extra-testing]
#Include = /etc/pacman.d/mirrorlist

[extra]
Include = /etc/pacman.d/mirrorlist

# If you want to run 32 bit applications on your x86_64 system,
# enable the multilib repositories as required here.

#[multilib-testing]
#Include = /etc/pacman.d/mirrorlist

[multilib]
Include = /etc/pacman.d/mirrorlist

# An example of a custom package repository.  See the pacman manpage for
# tips on creating your own repositories.
#[custom]
#SigLevel = Optional TrustAll
#Server = file:///home/custompkgs


[darwin@dinm5CG0322LF9 ~]$ cat /etc/pacman.d/mirrorlist
#Server = https://geo.mirror.pkgbuild.com/$repo/os/$arch
#Server = https://mirror.rackspace.com/archlinux/$repo/os/$arch
#Server = https://mirror.leaseweb.net/archlinux/$repo/os/$arch

#Server = https://mirror.lnx.sk/pub/linux/archlinux/$repo/os/$arch

#Server = https://tux.rainside.sk/archlinux/$repo/os/$arch

#Server = https://eu.mirror.archlinuxarm.org/aarch64/$repo/$arch

## Slovakia
Server = https://mirror.lnx.sk/pub/linux/archlinux/$repo/os/$arch
## Slovakia
Server = http://tux.rainside.sk/archlinux/$repo/os/$arch
## Slovakia
Server = http://mirror.lnx.sk/pub/linux/archlinux/$repo/os/$arch
## EU
Server = https://eu.mirror.archlinuxarm.org/aarch64/$repo/$arch
--


wsl --list -verbose
wsl --update
wsl --shutdown # pre vypnutie/restartovanie
wsl --set-default-version 2
wsl --set-version Arch 2
winget install usbipd
usbipd bind --busid 1-1





sudo nano /etc/resolv.conf
-> nameserver 1.1.1.1


sudo pacman-key --init
sudo pacman -Syu

wget http://ftp.debian.org/debian/pool/main/f/fakeroot/fakeroot_1.34.orig.tar.gz
tar xvf fakeroot_1.34.orig.tar.gz
cd fakeroot-1.34/
./bootstrap
./configure --prefix=/usr --libdir=/usr/lib --disable-static --with-ipc=tcp
make
sudo make install
cd ..
rm -rf fakeroot*


git clone https://aur.archlinux.org/fakeroot-tcp.git
cd fakeroot-tcp/
makepkg -si
libtool --finish /usr/lib/libfakeroot

git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si


sudo pacman -Syu
sudo pacman -Syyu base base-devel git vim wget reflector fish arduino



yay -S daemonize



Get the IP of your local computer of the vEthernet (WSL) interface from CMD or PowerShell:

ipconfig

Export output to display using IP address collected in step 3.

For bash and zsh: export DISPLAY=192.168.1.100:0

For fish: set -x DISPLAY 192.168.1.100:0

Note: Add to ~/.bashrc, ~/.zshrc, or ~/.config/fish/fish.config and you won't need to type it again on the next WSL launch.


sudo nano ~/.config/fish/fish.config --------------- kuknut vnutri


sudo mount -t drvfs -o "ro,umask=222" "C:\Program Files\usbipd-win\WSL" "/var/run/usbipd-win"





sudo nano /etc/udev/rules.d/01-ttyusb.rules
-> SUBSYSTEMS=="usb-serial", TAG+="uaccess"


sudo nano /etc/profile.d/00-wsl2-systemd.sh
->
SYSTEMD_PID=$(ps -ef | grep '/lib/systemd/systemd --system-unit=basic.target$' | grep -v unshare | awk '{print $2}')

if [ -z "$SYSTEMD_PID" ]; then
   sudo /usr/bin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/    systemd/systemd --system-unit=basic.targ>   SYSTEMD_PID=$(ps -ef | grep '/lib/systemd/systemd --system-unit=basic.    target$' | grep -v unshare | awk '{print $>fi

if [ -n "$SYSTEMD_PID" ] && [ "$SYSTEMD_PID" != "1" ]; then
    exec sudo /usr/bin/nsenter -t $SYSTEMD_PID -a su - $LOGNAME
fi


sudo nano  /etc/wsl.conf
->
[automount]
enabled = true
options = "metadata,uid=1000,gid=1000,umask=22,fmask=11,case=off"
mountFsTab = true
crossDistro = true

[network]
generateHosts = false
generateResolvConf = true

[interop]
enabled = true
appendWindowsPath = true

[user]
default = darwin


sudo useradd -m -s /bin/bash username
sudo passwd username
sudo usermod -aG wheel username


sudo pacman -S openssh
sudo nano /etc/ssh/sshd_config
-> port 22
sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT
sudo ssh-keygen -A 
sudo /usr/bin/sshd
ssh sshdarwin@172.21.191.3 -R 3240:127.0.0.1:3240

sudo iptables -A INPUT -p tcp --dport 3240 -j ACCEPT

sudo pacman -S bubblewrap
sudo bwrap --dev-bind / / --unshare-pid --as-pid-1 /usr/lib/systemd/systemd
sudo mkdir -p /etc/systemd/system/multi-user.target.wants/
sudo ln -s /usr/lib/systemd/system/sshd.service /etc/systemd/system/multi-user.target.wants/sshd.service

sudo pacman -S usbip
usbip list --remote 127.0.0.1
sudo usbip attach --busid 1-1 --remote 127.0.0.1



sudo chmod +x ./CKMA

sudo pacman -S qt6-serialport

sudo pacman -S arduino

udevadm control --reload / udevadm trigger
sudo modprobe cdc_acm

sudo chmod a+rw /dev/ttyACM0 




Ako za beznej prevádzky:
- Spustit XLaunch: nastavit podľa vyššieho návodu
- ssh sshdarwin@172.21.191.3 -R 3240:127.0.0.1:3240
- sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT # nevedno, daval som ssh zlu ip
- sudo iptables -A INPUT -p tcp --dport 3240 -j ACCEPT # to iste
- usbip list --remote 127.0.0.1
- sudo usbip attach --busid 1-1 --remote 127.0.0.1
- sudo chmod a+rw /dev/ttyACM0
